{"version":3,"sources":["../../src/components/Errors.jsx"],"names":[],"mappings":"AAAA,YAAY,CAAC;;AAEb,IAAM,iBAAiB,GAAG,KAAK,CAAC,WAAW,CAAC;;AAC3C,gBAAe,6BAAG;AACjB,SAAO;AACN,cAAW,EAAE,CAAC;GACd,CAAC;EACF;AACD,kBAAiB,+BAAG;AACnB,QAAM,CAAC,gBAAgB,CAAC,OAAO,EAAE,IAAI,CAAC,wBAAwB,CAAC,CAAC;AAChE,QAAM,CAAC,gBAAgB,CAAC,OAAO,EAAE,IAAI,CAAC,2BAA2B,CAAC,CAAC;AACnE,QAAM,CAAC,gBAAgB,CAAC,OAAO,EAAE,IAAI,CAAC,4BAA4B,CAAC,CAAC;EACpE;AACD,yBAAwB,sCAAG;;AAE1B,SAAO,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC;EAC/B;AACD,4BAA2B,yCAAG;;AAE7B,MAAI,CAAC,QAAQ,CAAC,EAAC,WAAW,EAAE,IAAI,CAAC,KAAK,CAAC,WAAW,GAAG,CAAC,EAAC,CAAC,CAAC;EACzD;AACD,6BAA4B,0CAAG;;AAE9B,MAAI,CAAC,KAAK,CAAC,YAAY,EAAE,CAAC;EAC1B;AACD,OAAM,oBAAG;AACR,SACC,gCAAM,CACL;EACF;CACD,CAAC,CAAC;;AAEH,IAAM,MAAM,GAAG,KAAK,CAAC,WAAW,CAAC;;AAChC,gBAAe,6BAAG;AACjB,SAAO;AACN,SAAM,EAAE,CAAC;AACT,UAAO,EAAE,IAAI;GACb,CAAC;EACF;AACD,kBAAiB,+BAAG;;;AACnB,YAAU,CAAC,YAAM;AAChB,SAAK,QAAQ,CAAC,EAAC,OAAO,EAAE,KAAK,EAAC,CAAC,CAAC;GAChC,EAAE,CAAC,CAAC,CAAC;EACN;AACD,iBAAgB,8BAAG;AAClB,MAAI,CAAC,QAAQ,CAAC,EAAC,MAAM,EAAE,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,EAAC,CAAC,CAAC;EAC/C;AACD,OAAM,oBAAG;AACR,SACC;;;GACC;;;;IAEK;GACL;;;;IAGI;GACJ;;;;IAKI;GACJ;;;;IAAc,IAAI,CAAC,KAAK,CAAC,MAAM;IAAO;GACrC,IAAI,CAAC,KAAK,CAAC,OAAO,IAClB,oBAAC,iBAAiB;AACjB,gBAAY,EAAE,IAAI,CAAC,gBAAgB,AAAC;KACnC;GAEE,CACL;EACF;CACD,CAAC,CAAC","file":"Errors.js","sourcesContent":["\"use strict\";\n\nconst ListenerComponent = React.createClass({\n\tgetInitialState() {\n\t\treturn {\n\t\t\tinnerClicks: 0\n\t\t};\n\t},\n\tcomponentDidMount() {\n\t\twindow.addEventListener(\"click\", this.handleMouseClickWithLeak);\n\t\twindow.addEventListener(\"click\", this.handleMouseClickWithWarning);\n\t\twindow.addEventListener(\"click\", this.handleMouseClickWithListener);\n\t},\n\thandleMouseClickWithLeak() {\n\t\t// This method does not do anything useful, but it is present\n\t\tconsole.log(\"do something...\");\n\t},\n\thandleMouseClickWithWarning() {\n\t\t// Calls setState, which results a warning if the component is not mounted\n\t\tthis.setState({innerClicks: this.state.innerClicks + 1});\n\t},\n\thandleMouseClickWithListener() {\n\t\t// The listener is still active, even though the component is unmounted\n\t\tthis.props.onMouseClick();\n\t},\n\trender() {\n\t\treturn (\n\t\t\t<div/>\n\t\t);\n\t}\n});\n\nconst Errors = React.createClass({\n\tgetInitialState() {\n\t\treturn {\n\t\t\tclicks: 0,\n\t\t\tenabled: true\n\t\t};\n\t},\n\tcomponentDidMount() {\n\t\tsetTimeout(() => {\n\t\t\tthis.setState({enabled: false});\n\t\t}, 0);\n\t},\n\thandleMouseClick() {\n\t\tthis.setState({clicks: this.state.clicks + 1});\n\t},\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<h3>\n\t\t\t\t\tErrors demonstration\n\t\t\t\t</h3>\n\t\t\t\t<p>\n\t\t\t\t\tThis example demonstrates the different errors when you fail to\n\t\t\t\t\tremove a global mouse click event listener. (Tip: Click somewhere and check the console) \n\t\t\t\t</p>\n\t\t\t\t<p>\n\t\t\t\t\tThe component that registered the listener is removed from the page,\n\t\t\t\t\tbut it is still calling the handler (error #3). It also emits console.log events\n\t\t\t\t\t(error #1), effectively leaking memory and cpu. Also it sets it's internal state\n\t\t\t\t\teven though it is unmounted, resulting an error from React.\n\t\t\t\t</p>\n\t\t\t\t<div>clicks: {this.state.clicks}</div>\n\t\t\t\t{this.state.enabled &&\n\t\t\t\t\t<ListenerComponent\n\t\t\t\t\t\tonMouseClick={this.handleMouseClick}\n\t\t\t\t\t/>\n\t\t\t\t}\n\t\t\t</div>\n\t\t);\n\t}\n});\n\n"]}